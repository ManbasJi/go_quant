<style lang="less">
.scroll_box {
  overflow: auto;
}
.canvas {
}
.top-box {
  height: 80rpx;
  display: flex;
  align-items: center;
  justify-content: space-around;
  padding-left: 20rpx;
}
.goods-name {
  font-size: 30rpx;
  font-weight: bold;
}
.close-price {
  font-size: 40rpx;
  color: #e64340;
}
.goods-high {
  font-size: 28rpx;
  text {
    color: #e64340;
    font-weight: bold;
  }
}
.goods-low {
  font-size: 28rpx;
  text {
    color: #09bb07;
    font-weight: bold;
  }
}
.goods-open {
  font-size: 28rpx;
}
.goods-volume {
  font-size: 28rpx;
}
.goods-date {
  font-size: 24rpx;
  color: #999;
  padding-left: 30rpx;
  border-bottom: 1rpx solid #cdcdcd;
  height: 50rpx;
}
.scale-img {
  width: 60rpx;
  height: 60rpx;
  position: absolute;
  top: 230px;
  right: 10px;
}
.trade-sign_head {
  width: 100%;
  height: 60rpx;
  margin-bottom: 20rpx;
  .title {
    font-size: 30rpx;
    display: flex;
    padding-left: 20rpx;
    padding-right: 20rpx;
    align-items: center;
    justify-content: space-between;
    border-top: 1rpx solid #ebebeb;
    height: 60rpx;
    .label2 {
      flex-grow: 1;
      text-align: right;
      color: #999;
    }
    i {
      font-size: 30rpx;
      color: #999;
    }
  }
}
.trade-sign_content {
  width: 100%;
  padding: 10rpx 20rpx;
  display: flex;
  justify-content: space-around;
  font-size: 28rpx;
  .label1-buy {
    color: #27ae5b;
    font-weight: bold;
  }
  .label1-sell {
    color: #e31a20;
    font-weight: bold;
  }
  .label2 {
    color: #666;
  }
}

.trade-order_head {
  width: 100%;
  height: 60rpx;
  margin-top: 20rpx;
  margin-bottom: 20rpx;
  .title {
    font-size: 30rpx;
    display: flex;
    padding-left: 20rpx;
    padding-right: 20rpx;
    align-items: center;
    justify-content: space-between;
    border-top: 1rpx solid #ebebeb;
    height: 60rpx;
    .label2 {
      flex-grow: 1;
      text-align: right;
      color: #999;
    }
    i {
      font-size: 30rpx;
      color: #999;
    }
  }
}

.trade-order_content {
  width: 100%;
  padding: 10rpx 20rpx;
  display: flex;
  justify-content: space-around;
  font-size: 28rpx;
  .label1-buy {
    color: #27ae5b;
    font-weight: bold;
  }
  .label1-sell {
    color: #e31a20;
    font-weight: bold;
  }
  .label2-success {
    color: #333;
  }
  .label2-fail {
    color: #999;
  }
}
</style>
<template>
  <titlebar leftArrow=""
            titleName="策略学习"
            bgcolor=""></titlebar>
  <view class="top-box">
    <view class="goods-name">{{goodsName}}</view>
    <view class="close-price">{{curMsg.close}}</view>
    <view class="goods-high">高 <text>{{curMsg.high}}</text></view>
    <view class="goods-low">低 <text>{{curMsg.low}}</text></view>
    <view class="goods-open">开 <text>{{curMsg.open}}</text></view>
    <!-- <view class="goods-volume">量 <text>{{curMsg.volume}}</text></view> -->
  </view>
  <view class="goods-date">{{curMsg.day}}</view>
  <scroll-view class="scroll_box"
               style="width:{{wWidth-yWidth}}px;height:{{cHeight}}px;position:absolute;"
               scroll-x
               bindscroll="onScroll"
               bindtouchend="onTouchEnd"
               bindtouchstart="onTouchStart">
    <!-- <image wx:if="{{mainCanvasImg}}"
           src="{{mainCanvasImg}}"
           style="width:{{maincWidth}}px;height:{{cHeight}}px;position:absolute;"></image> -->
    <canvas wx:if="{{!mainCanvasImg}}"
            style="width:{{maincWidth}}px;height:{{cHeight}}px;position:absolute;"
            canvas-id="mainContent"></canvas>
    <canvas class="canvas"
            style="width:{{maincWidth}}px;height:{{cHeight}}px;"
            canvas-id="select-k-canvas"></canvas>
  </scroll-view>
  <canvas class="y-axis"
          style="width:{{yWidth}}px;height:{{cHeight}}px;margin-left:{{wWidth-yWidth}}px;"
          canvas-id="yAxis"></canvas>
  <view class="trade-sign_head">
    <view class="title">
      <text class="label1">交易信号</text>
      <text class="label2"
            @tap="onTradeSignDetail">更多</text>
      <i @tap="onTradeSignDetail"
         class="iconfont icon-more"></i>
    </view>
  </view>

  <repeat for="{{tradeSignList}}"
          key="index"
          index="index"
          item="item">
    <view class="trade-sign_content">
      <text class="{{item.type=='buy'?'label1-buy':'label1-sell'}}">{{item.type}}</text>
      <text class="label2">{{item.time}}</text>
      <text class="{{item.type=='buy'?'label1-buy':'label1-sell'}}">${{item.price}}</text>
    </view>
  </repeat>

  <view class="trade-order_head">
    <view class="title">
      <text class="label1"
            @tap="onTradeOrderDetail">交易订单</text>
      <text class="label2"
            @tap="onTradeOrderDetail">更多</text>
      <i class="iconfont icon-more"></i>
    </view>
  </view>

  <repeat for="{{tradeOrderList}}"
          key="index"
          index="index"
          item="item">
    <view class="trade-order_content">
      <text class="{{item.type=='buy'?'label1-buy':'label1-sell'}}">{{item.type}}</text>
      <text class="{{item.status=='成功'?'label2-success':'label2-fail'}}">{{item.status}}</text>
      <text class="time">{{item.time}}</text>
      <text class="{{item.type=='buy'?'label1-buy':'label1-sell'}}">${{item.price}}</text>
    </view>
  </repeat>

  <!-- <cover-image @tap.stop="onToLandscape"
               class="scale-img"
               src="../images/scale-big.png"
               mode="scaleToFill"
               lazy-load="false">
  </cover-image> -->
</template>

<script>
import wepy from 'wepy';
import drawAxisUtil from '../utils/draw-axis';
import apiUtil from '../api/apiUtil';
import kLinesDatas from '../utils/datas';
import titlebar from '../components/title-bar-zl';
import drawKLinesUtil from '../utils/drawKLinesUtil'
export default class Index extends wepy.page {
  config = {
    navigationBarTitleText: '策略学习'
  };

  components = {
    titlebar: titlebar
  };

  data = {
    landscape: 'landscape',
    kselectCanvas: null,
    wWidth: 0,
    wHeight: 0,
    yWidth: 50,
    xHeight: 50,
    cHeight: 200,
    minData: 0,
    maxData: 0,
    goodsId: null,
    goodsName: '隆平高科',
    goodsCode: null,
    kLineView: null,
    quotation: {},
    quotePeriod: null,
    values: [],
    canvasLen: 0,
    maincWidth: 0,
    kWidth: 20,
    kMarginRight: 5,
    mainMarginLeft: 15,
    scrollLeft: 0, //滚动条滚动的位置
    touchEnd: 0, // 点击canvas的位置
    kDatas: [],
    curMsg: {},
    isScroll: false,
    mainCanvasImg: null,
    tradeSignList: [
      {
        type: 'buy',
        time: '2019-09-17 10:12:23',
        price: '25.25'
      },
      {
        type: 'sell',
        time: '2019-09-17 10:12:23',
        price: '25.25'
      },
      {
        type: 'buy',
        time: '2019-09-17 10:12:23',
        price: '25.25'
      },
      {
        type: 'sell',
        time: '2019-09-17 10:12:23',
        price: '25.25'
      }, {
        type: 'buy',
        time: '2019-09-17 10:12:23',
        price: '25.25'
      },
      {
        type: 'buy',
        time: '2019-09-17 10:12:23',
        price: '25.25'
      },
      {
        type: 'sell',
        time: '2019-09-17 10:12:23',
        price: '25.25'
      }
    ],
    tradeOrderList: [
      {
        type: 'buy',
        status: '成功',
        time: '2019-09-17 10:12:23',
        price: '28.26'
      },
      {
        type: 'sell',
        status: '成功',
        time: '2019-09-17 10:12:23',
        price: '28.26'
      },
      {
        type: 'buy',
        status: '失败',
        time: '2019-09-17 10:12:23',
        price: '28.26'
      },
      {
        type: 'buy',
        status: '成功',
        time: '2019-09-17 10:12:23',
        price: '28.26'
      },
      {
        type: 'sell',
        status: '成功',
        time: '2019-09-17 10:12:23',
        price: '28.26'
      },
      {
        type: 'buy',
        status: '成功',
        time: '2019-09-17 10:12:23',
        price: '28.26'
      },
      {
        type: 'buy',
        status: '成功',
        time: '2019-09-17 10:12:23',
        price: '28.26'
      },
    ]
  };

  onLoad () {
    const drawUtil = new drawKinesUtil()
    let _t = this;
    wx.getSystemInfo({
      success (res) {
        _t.wWidth = res.windowWidth;
        _t.wHeight = res.windowHeight;
      }
    });
    this._onGetKLinesData();
  }

  _onGetKLinesData () {
    this.kDatas = kLinesDatas.kLines;
    this.curMsg = this.kDatas[this.kDatas.length - 1];
    // apiUtil.onGetKLinesApi({}, res => {
    //   res.data.replace(/day/g, "days")
    //   res.data.replace('open', '"open"')
    //   res.data.replace('close', '"close"')
    //   res.data.replace('low', '"low"')
    //   res.data.replace('high', '"high"')
    //   res.data.replace('volume', '"volume"')
    //   this.kDatas = res.data
    console.log('===', this.kDatas);
    this.onCanvas();
    //   this.$apply()
    // })
  }

  onCanvas () {
    const data = this.kDatas;
    const minData = Math.min.apply(
      Math,
      data.map(function (o) {
        return o.low;
      })
    );
    const maxData = Math.max.apply(
      Math,
      data.map(function (o) {
        return o.high;
      })
    );
    this.minData = minData;
    this.maxData = maxData;
    this.kselectCanvas = wx.createCanvasContext('select-k-canvas');
    // 绘制纵坐标
    const yctx = wx.createCanvasContext('yAxis');
    const ystyle = {
      color: '#cdcdcd'
    };
    const points = drawAxisUtil.onDrawYAxis(
      yctx,
      minData,
      maxData,
      ystyle,
      this.xHeight,
      this.cHeight,
      this.yWidth
    );
    // 绘制横坐标
    let xctx = wx.createCanvasContext('mainContent');
    this.mainCanvas = xctx;
    const xstyle = {
      color: '#cdcdcd'
    };
    this.maincWidth =
      (this.kWidth + this.kMarginRight) * this.kDatas.length +
      this.mainMarginLeft;
    this.maincWidth < this.wWidth - this.yWidth &&
      (this.maincWidth = this.wWidth - this.yWidth);
    console.log(this.maincWidth);
    drawAxisUtil.onDrawXAxis(
      xctx,
      points,
      this.kWidth,
      this.kDatas.length,
      this.xHeight,
      this.cHeight,
      this.maincWidth,
      this.wWidth - this.yWidth,
      1,
      xstyle,
      data
    );
    // 绘制k线图
    drawAxisUtil.onDrawKLines(
      xctx,
      this.cHeight,
      this.xHeight,
      this.kDatas,
      minData,
      maxData
    );
    xctx.draw(true, res => {
      let _t = this
      // wx.canvasToTempFilePath({
      //   canvasId: 'mainContent',
      //   success (res) {
      //     _t.mainCanvasImg = res.tempFilePath
      //     _t.$apply()
      //     console.log('SUCCESS', res.tempFilePath)
      //   },
      //   fail (res) {
      //     console.log('fail:', res)
      //   },
      //   complate (res) {
      //     console.log('complate:', res)
      //   }
      // })
    })
    // 将mainContent画布保存为本地图片

  }

  onTouchStart (e) {
    this.isScroll = false;
    console.log('start:', e);
  }

  onTouchEnd (e) {
    if (this.isScroll) {
      return;
    }
    this.touchEnd = e.changedTouches[0].pageX;
    const kn = Math.ceil(
      (this.scrollLeft +
        e.changedTouches[0].pageX -
        this.mainMarginLeft) /
      (this.kWidth + this.kMarginRight)
    );
    this.curMsg = this.kDatas[kn - 1];
    drawAxisUtil.onDrawLineBorder(
      this.kselectCanvas,
      this.cHeight,
      this.xHeight,
      this.minData,
      this.maxData,
      this.kDatas[kn - 1],
      kn - 1
    );
  }

  onScroll (e) {
    const kn = Math.ceil(
      (e.detail.scrollLeft + this.wWidth - this.yWidth - this.mainMarginLeft) /
      (this.kWidth + this.kMarginRight)
    );
    this.curMsg = this.kDatas[kn - 1];
    drawAxisUtil.onDrawLineBorder(
      this.kselectCanvas,
      this.cHeight,
      this.xHeight,
      this.minData,
      this.maxData,
      this.kDatas[kn - 1],
      kn - 1,
      true
    );
    this.scrollLeft = e.detail.scrollLeft;
    this.isScroll = true;
  }

  methods = {
    onToLandscape (e) {
      wepy.navigateTo({ url: 'landscape' });
    },
    onTradeOrderDetail () {
      wepy.navigateTo({ url: 'tradeOrder' });
    },
    onTradeSignDetail () {
      wepy.navigateTo({ url: 'tradeSign' });

    }
  };
}
</script>
