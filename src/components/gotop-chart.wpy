<template>
  <view class="main-container"
        style="width:{{cWidth}}px;height:{{cHeight}}px">
    <canvas canvas-id="canvas"
            disable-scroll="true"
            style="width:{{cWidth}}px;height:{{cHeight-toolsHeight}}px;position:absolute;"></canvas>
    <canvas canvas-id="opt-canvas"
            style="width:{{cWidth}}px;height:{{cHeight-toolsHeight}}px;position:absolute;"
            bindtouchstart="onTouchStart"
            bindtouchend="onTouchEnd"
            bindtouchmove="onTouchMove"
            @tap.stop="onClick"></canvas>
    <view class="top-tools">
      <view wx:if="{{landScape!='true'}}"
            hover-class="click-hover-o"
            @tap.stop="onToLandscape"
            class="iconfont icon-landScape scale-img">
      </view>
      <view hover-class="click-hover-o"
            @tap.stop="onGoLeft"
            class="iconfont icon-go-left scale-img">
      </view>
      <view hover-class="click-hover-o"
            @tap.stop="onGoRight"
            class="iconfont icon-go-right scale-img">
      </view>
      <view hover-class="click-hover-o"
            @tap.stop="onKBig"
            class="iconfont icon-scale-big scale-img">
      </view>
      <view hover-class="click-hover-o"
            @tap.stop="onKSmall"
            class="iconfont icon-scale-small scale-img">
      </view>
    </view>
  </view>
</template>
<script>
import wepy from 'wepy'
import gotopChart from '@/utils/gotop-chart'
import datas from '@/utils/datas'
export default class goTopChart extends wepy.component {

  props = {
    landScape: {
      type: String,
      default: 'false'
    },
    cWidth: {
      type: Number,
      default: 0,
    },
    cHeight: {
      type: Number,
      default: 240
    }
  }

  data = {
    toolsHeight: 60,
    QTChart: null,
    option: {},
  }

  onLoad (e) {

  }

  onShow () {
    console.log('gochart show')
  }

  methods = {
    setCanvasSize (w, h) {
      this.cWidth = w
      this.cHeight = h
      var option = {
        canvas: wx.createCanvasContext('canvas'),
        optCanvas: wx.createCanvasContext('opt-canvas'),
        chartArray: [
          {
            name: 'kline',
            goodsName: 'BTC/USDT',
            index: 0,
            datas: datas.kLines,
          }
        ]
      }
      this.QTChart = gotopChart.QTChart.Init()
      this.QTChart.OnSize(this.cHeight - this.toolsHeight, this.cWidth)
      this.QTChart.SetOption(option)
      this.$apply()
    },
    setSizeChange (w, h) {
      this.cWidth = w
      this.cHeight = h
      this.QTChart && this.QTChart.SetOnSizeChange(this.cHeight - this.toolsHeight, this.cWidth)
    },
    onTouchStart (e) {
      this.QTChart && this.QTChart.onTouchStart(e.changedTouches[0].x, e.changedTouches[0].y)
    },
    onTouchEnd (e) {
      this.QTChart && this.QTChart.onTouchEnd(e.changedTouches[0].x, e.changedTouches[0].y)
    },
    onTouchMove (e) {
      // if (this.QTChart) {
      //   let curMsg = this.QTChart.onTouchMove(e.changedTouches[0].x, e.changedTouches[0].y)
      //   this.$emit('cur-msg-changed', curMsg)
      // }
    },
    onClick (e) {
      if (this.QTChart) {
        let curMsg = this.QTChart.onSelectKLine(e.changedTouches[0].clientX)
        console.log(curMsg)
        this.$emit('cur-msg-changed', curMsg)
      }
    },
    onToLandscape () {
      wepy.navigateTo({ url: 'landscape' });
    },
    onGoLeft () {
      if (this.QTChart) {
        this.QTChart.onStep('left')
      }
    },
    onGoRight () {
      if (this.QTChart) {
        this.QTChart.onStep('right')
      }
    },
    onKBig () {
      if (this.QTChart) {
        this.QTChart.onKLineScale(1)
      }
    },
    onKSmall () {
      if (this.QTChart) {
        this.QTChart.onKLineScale(-1)
      }
    }

  }
}
</script>
<style lang="less">
.main-container {
  position: relative;
  margin-top: 10px;
}
.canvas {
  position: absolute;
  z-index: 1;
}
.opt-canvas {
  position: absolute;
  z-index: 2;
}
.scale-img {
  width: 25px;
  height: 25px;
  border-radius: 2px;
  padding: 2px;
  background: #fff;
  border: 1px solid #f2f2f2;
  box-shadow: 1px 1px 1px 1px #cbcdd5;
  border-radius: 4px;
  font-size: 24px;
  text-align: center;
}
.top-tools {
  display: flex;
  width: 100%;
  justify-content: space-around;
  position: absolute;
  bottom: 10px;
}
</style>
