<template>
  <view class="qiun-charts">
    <canvas canvas-id="canvasCandle"
            id="canvasCandle"
            class="charts"
            bindtouchstart="touchCandle"
            bindtouchmove="moveCandle"
            bindtouchend="touchEndCandle"></canvas>
  </view>
</template>
<script>
import wepy from 'wepy'
import uCharts from '@/utils/u-charts.js'
export default class klines extends wepy.component {

  props = {

  }

  data = {
    cWidth: '',
    cHeight: '',
    canvaColumn: null,
    canvaLineA: null,
    canvaCandle: null
  }

  onLoad () {
    this.cWidth = wx.getSystemInfoSync().windowWidth;
    this.cHeight = 500 / 750 * wx.getSystemInfoSync().windowWidth;
    this.getServerData();
  }

  getServerData () {
    let _self = this
    wx.request({
      url: 'https://www.ucharts.cn/data.json',
      data: {
      },
      success: function (res) {
        console.log(res.data.data)
        let Column = { categories: [], series: [] };
        Column.categories = res.data.data.ColumnB.categories;
        Column.series = res.data.data.ColumnB.series;
        //自定义标签颜色和字体大小
        Column.series[1].textColor = 'red';
        Column.series[1].textSize = 18;
        let LineA = { categories: [], series: [] };
        //这里我后台返回的是数组，所以用等于，如果您后台返回的是单条数据，需要push进去
        LineA.categories = res.data.data.LineA.categories;
        LineA.series = res.data.data.LineA.series;
        let Candle = { categories: [], series: [] };
        //这里我后台返回的是数组，所以用等于，如果您后台返回的是单条数据，需要push进去
        Candle.categories = res.data.data.Candle.categories;
        Candle.series = res.data.data.Candle.series;
        _self.showCandle("canvasCandle", Candle);
      },
      fail: () => {
        console.log("请点击右上角【详情】，启用不校验合法域名");
      },
    });
  }

  showCandle (canvasId, chartData) {
    let _self = this
    this.canvaCandle = new uCharts({
      $this: _self,
      canvasId: canvasId,
      type: 'candle',
      fontSize: 11,
      legend: true,
      background: '#FFFFFF',
      pixelRatio: 1,
      categories: chartData.categories,
      series: chartData.series,
      animation: true,
      enableScroll: true,
      xAxis: {
        disableGrid: true,
        itemCount: 20,
        scrollShow: true,
        scrollAlign: 'right',
        labelCount: 4,
      },
      yAxis: {
        // disabled: true,
        gridType: 'dash',
        splitNumber: 5,
        format: (val) => {
          return val.toFixed(0)
        }
      },
      width: _self.cWidth,
      height: _self.cHeight,
      dataLabel: false,
      dataPointShape: true,
      extra: {
        candle: {
          color: {
            upLine: '#f04864',
            upFill: '#f04864',
            downLine: '#2fc25b',
            downFill: '#2fc25b'
          },
          // average: {
          //   show: true,
          //   name: ['MA5', 'MA10', 'MA30'],
          //   day: [5, 10, 30],
          //   color: ['#1890ff', '#2fc25b', '#facc14']
          // }
        },
        tooltip: {
          bgColor: '#000000',
          bgOpacity: 0.7,
          gridType: 'dash',
          dashLength: 5,
          gridColor: '#1890ff',
          fontColor: '#FFFFFF',
          horizentalLine: true,
          xAxisLabel: true,
          yAxisLabel: true,
          labelBgColor: '#DFE8FF',
          labelBgOpacity: 0.95,
          labelAlign: 'left',
          labelFontColor: '#666666'
        }
      },
    });
  }



  methods = {
    // touchCandle (e) {
    //   this.canvaCandle.scrollStart(e);
    // },
    moveCandle (e) {
      console.log('move===')
      this.canvaCandle.scroll(e);
    },
    // touchEndCandle (e) {
    //   this.canvaCandle.scrollEnd(e);
    //   //下面是toolTip事件，如果滚动后不需要显示，可不填写
    //   this.canvaCandle.showToolTip(e, {
    //     format: function (item, category) {
    //       return category + ' ' + item.name + ':' + item.data
    //     }
    //   });
    // },
  }
}
</script>
<style lang="less" scoped>
/**index.wxss**/
.qiun-charts {
  width: 750rpx;
  height: 500rpx;
  background-color: #ffffff;
}
.charts {
  width: 750rpx;
  height: 500rpx;
  background-color: #ffffff;
}
</style>
